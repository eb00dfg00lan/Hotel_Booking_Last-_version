import re
import hashlib
import streamlit as st
from tools.db import get_connection

def _hash_password(password: str) -> str:
    return hashlib.sha256(password.encode()).hexdigest()

def _is_valid_email(email: str) -> bool:
    return bool(re.match(r"[^@]+@[^@]+\.[^@]+", email))

def render(goto):
    st.title("üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
    username = st.text_input("–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", key="reg_name")
    email = st.text_input("Email", key="reg_email")
    password = st.text_input("–ü–∞—Ä–æ–ª—å", type="password", key="reg_pass")
    c1,c2 = st.columns([1,1])
    with c1:
        if st.button("–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è"):
            if not (username and email and password):
                st.error("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è.")
            elif not _is_valid_email(email):
                st.error("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email.")
            else:
                with get_connection() as conn:
                    cur = conn.cursor()
                    try:
                        cur.execute(
                            "INSERT INTO users (username, email, password) VALUES (?, ?, ?)",
                            (username, email, _hash_password(password))
                        )
                        conn.commit()
                        st.success("–ê–∫–∫–∞—É–Ω—Ç —Å–æ–∑–¥–∞–Ω. –¢–µ–ø–µ—Ä—å –≤–æ–π–¥–∏—Ç–µ.")
                        goto("login")
                    except Exception as e:
                        st.error(f"–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: –≤–æ–∑–º–æ–∂–Ω–æ, email —É–∂–µ –∑–∞–Ω—è—Ç. {e}")
    with c2:
        if st.button("–£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç", key="go_register"):
            goto("login")