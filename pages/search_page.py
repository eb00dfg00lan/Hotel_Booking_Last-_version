# pages/search_page.py
import streamlit as st
from pathlib import Path
from tools.db import fetch_hotels
from core.filtres import make_city_filter, make_price_range_filter, make_stars_filter, filter_hotels


def load_css(file_path: str):
    css = Path(file_path).read_text(encoding="utf-8")
    st.markdown(f"<style>{css}</style>", unsafe_allow_html=True)

def render(goto):
    st.title("üîç –ü–æ–∏—Å–∫ –æ—Ç–µ–ª–µ–π")
    
    load_css("assets/app.css")
    rows = fetch_hotels() or []  # (id, name, city, price, rating, rooms, available)
    load_css("assets/app.css")

    # --- —Ñ–∏–ª—å—Ç—Ä—ã ---
    st.markdown('<div class="filters-header">‚öôÔ∏è –§–∏–ª—å—Ç—Ä—ã</div>', unsafe_allow_html=True)

    cities = sorted({r[2] for r in rows}) if rows else []
    city = st.selectbox("üèôÔ∏è –ì–æ—Ä–æ–¥", ["–í—Å–µ"] + cities)

    max_price_in_data = max((int(r[3]) for r in rows), default=100000)
    slider_max = max(10000, ((max_price_in_data // 10000) + 1) * 10000)

    colA, colB = st.columns(2)
    with colA:
        st.markdown("üí∞ **–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞** (‚Ç∏/–Ω–æ—á—å)")
        max_price = st.slider("", 0, slider_max, min(slider_max, 50000), key="price_slider")
    with colB:
        st.markdown("‚≠ê **–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥**")
        min_stars = st.slider("", 1, 5, 3, key="stars_slider")
    # --- —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ ---
    items = [
        {"id": int(r[0]), "name": r[1], "city": r[2], "price": int(r[3]),
         "rating": float(r[4]), "rooms": int(r[5]), "available": bool(r[6])}
        for r in rows
    ]

    preds = [
        make_city_filter(city),
        make_price_range_filter(0, max_price),
        make_stars_filter(min_stars),
    ]
    filtered = filter_hotels(items, preds)

    # --- –≤—ã–≤–æ–¥ ---
    if not filtered:
        st.info("–ù–µ—Ç –æ—Ç–µ–ª–µ–π –ø–æ –∑–∞–¥–∞–Ω–Ω—ã–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º.")
        return

    for h in filtered:
        stars = max(1, min(5, int(round(h["rating"]))))

        # --- —Ç–µ–ø–µ—Ä—å –∫–∞–∂–¥—ã–π –æ—Ç–µ–ª—å –≤ —Å–≤–æ–µ–º expander ---
        with st.expander(f"{h['name']} ‚Äî {h['city']} ‚≠ê {stars}", expanded=False):
            st.write(f"**–¶–µ–Ω–∞ –∑–∞ –Ω–æ—á—å:** {h['price']} ‚Ç∏")
            st.write(f"**–†–µ–π—Ç–∏–Ω–≥:** {h['rating']:.1f}")
            st.write(f"**–ù–æ–º–µ—Ä–æ–≤ –≤—Å–µ–≥–æ:** {h['rooms']}")
            st.write(f"**–î–æ—Å—Ç—É–ø–Ω–æ —Å–µ–π—á–∞—Å:** {'‚úÖ –ï—Å—Ç—å' if h['available'] else '‚ùå –ù–µ—Ç'}")

            # –∫–Ω–æ–ø–∫–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
            if st.button(f"–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å", key=f"book_{h['id']}"):
                if not st.session_state.get("user"):
                    st.error("–°–Ω–∞—á–∞–ª–∞ –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É.")
                else:
                    st.session_state.selected_hotel_id = h["id"]
                    goto("Booking")
